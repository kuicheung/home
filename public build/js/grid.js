define(["lib/pathfinding-min"],function(e,t){var n=function(t,n,r,i){var s=0,o={},u=JSON.parse(i),a=u.layers[1].data,f=0,l=[];for(var c=0;c<t;c++){var h=[];for(var p=0;p<n;p++)a[f++]>0?h[p]=1:h[p]=0;l.push(h)}var d=new e.Grid(n,t,l),v=new e.AStarFinder({allowDiagonal:!0});return{reset:function(){o={}},calculatePathLength:function(e){var t,n,r,i,s=0;n=e[0];for(t=1;t<e.length;t++)r=e[t],o[n.i+"to"+r.i]?i=o[n.i+"to"+r.i]:(i=v.findPath(n.col,n.row,r.col,r.row,d.clone()),o[n.i+"to"+r.i]=i),s+=i.length>0?i.length-1:0,n=r;return s},generatePath:function(e){var t=_.clone(e);s=e.length;var n=0,r=[],i,o;r.push(t.shift());while(t.length>0)i=Math.round(Math.random()*(t.length-1)),o=t[i],t[i]=t[0],t[0]=o,r.push(t.shift());return r},pathLength:s,tilesAry:a,finder:v,grid:d,gridsize:r}};return n});