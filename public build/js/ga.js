define(["lib/encog"],function(e){var t=function(e){function l(r){e.reset(),n=r.length,t=ENCOG.Genetic.create(),t.crossover=function(t,n,r,i){var s=(t.length-1)/5,o=Math.floor(Math.random()*(t.length-s-1))+1,u=o+s,a={},f={};for(var l=0;l<t.length;l++)l<o||l>u||(r[l]=n[l],i[l]=t[l],a[n[l].i]=!0,f[t[l].i]=!0);for(var l=0;l<t.length;l++)if(l<o||l>u)r[l]=h(t,a),i[l]=h(n,f)},t.mutate=function(t){var n=Math.floor(Math.random()*(t.length-1))+1,r=Math.floor(Math.random()*(t.length-1))+1;n==r&&(n>1?n--:n++);var i=t[n];t[n]=t[r],t[r]=i},t.scoreSolution=function(t){return e.calculatePathLength(t)},t.createPopulation(i,function(){return e.generatePath(r)})}function c(e){n=e.constCities||n,r=e.constStable||r,i=e.constPopulationSize||i,u=e.constMutationPercent||u,a=e.constMatePercent||a,startOver()}function h(e,t){for(var r=0;r<n;r++){var i=e[r];if(t[i.i]!=1)return t[i.i]=!0,i}return-1}function p(){var n=1,i=new Date;o=0;while(o<=r){t.iteration(),e.currentPath=t.getSolution(),n++;var u=Math.floor(e.calculatePathLength(e.currentPath));u==s?o++:(s=u,o=0)}return console.log("time:"+((new Date).getMilliseconds()-i.getMilliseconds())),console.log("Stable solution found after "+n+" iterations: Path length = "+u),e.currentPath}var t,n=0,r=30,i=500,s=0,o=0,u=.1,a=.24,f=.5;return{run:p,startover:l}};return t});